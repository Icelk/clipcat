name: Build

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "*"

  pull_request:
    branches:
      - main
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  all:
    name: All

    strategy:
      matrix:
        os:
          - ubuntu-latest
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    runs-on: ${{matrix.os}}

    env:
      RUSTFLAGS: "-D warnings"

    steps:
      - uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Main Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{matrix.target}}
          profile: minimal
          components: clippy
          override: true

      - name: Install Rustfmt (Nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{matrix.target}}
          profile: minimal
          components: rustfmt

      - name: Show Toolchain Version
        run: |
          rustup --version
          cargo --version
          cargo +nightly fmt --version
          cargo clippy --version

      - name: Check Format
        run: cargo +nightly fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all

      - name: Build
        run: cargo build --features=all --verbose

      - name: Test
        run: cargo test --all --verbose

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          target=${{matrix.target}}

          cargo build --features=all --release --verbose --target $target

      - name: Package
        id: package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          src=`pwd`
          dist=$src/dist

          github_ref=${{github.ref}}
          version=${github_ref#"refs/tags/"}
          target=${{matrix.target}}
          archive="clipcat-$version-$target.tar.gz"

          mkdir $dist
          cp \
            README.md \
            LICENSE \
            target/$target/release/clipcatd \
            target/$target/release/clipcatctl \
            target/$target/release/clipcat-menu \
            target/$target/release/clipcat-notify \
            $dist

          cd $dist
          tar cvf ../$archive *
          echo "::set-output name=archive::$archive"

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          files: ${{ steps.package.outputs.archive }}
          prerelease: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
